.\" Automatically generated by Pandoc 1.19.2.4
.\"
.TH "PMEM2_CONFIG" "3" "2019-10-22" "PMDK - pmem API version 1.0" "PMDK Programmer's Manual"
.hy
.\" Copyright 2019, Intel Corporation
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\"
.\"     * Redistributions of source code must retain the above copyright
.\"       notice, this list of conditions and the following disclaimer.
.\"
.\"     * Redistributions in binary form must reproduce the above copyright
.\"       notice, this list of conditions and the following disclaimer in
.\"       the documentation and/or other materials provided with the
.\"       distribution.
.\"
.\"     * Neither the name of the copyright holder nor the names of its
.\"       contributors may be used to endorse or promote products derived
.\"       from this software without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
.\" "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
.\" LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
.\" A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
.\" OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
.\" SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
.\" LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
.\" DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
.\" THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
.\" (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
.\" OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
.SH NAME
.PP
\f[B]pmem2_config_new\f[](), \f[B]pmem2_config_delete\f[]() \- allocate
and free a configuration for a libpmem2 mapping
.SH SYNOPSIS
.IP
.nf
\f[C]
#include\ <libpmem2.h>

struct\ pmem2_config;
int\ pmem2_config_new(struct\ pmem2_config\ **cfg);
int\ pmem2_config_delete(struct\ pmem2_config\ **cfg);
\f[]
.fi
.SH DESCRIPTION
.PP
The \f[B]pmem2_config_new\f[]() function allocates
\f[I]pmem2_config\f[], and places it in \f[I]*cfg\f[].
Returned structure is initialized to default parameters.
.PP
The \f[B]pmem2_config_delete\f[]() function frees \f[I]*cfg\f[] returned
by \f[B]pmem2_config_new\f[]() and sets \f[I]*cfg\f[] to NULL.
.SH RETURN VALUE
.PP
The \f[B]pmem2_config_new\f[]() function returns 0 on success or one of
error values listed in the next section.
\f[B]pmem2_config_new\f[]() does set \f[I]*cfg\f[] to NULL on failure.
.PP
The \f[B]pmem2_config_delete\f[]() function returns 0.
.SH ERRORS
.IP \[bu] 2
\f[B]PMEM2_E_NOMEM\f[] Out of memory.
.IP \[bu] 2
\f[B]PMEM2_E_EXTERNAL\f[] in case of other errors.
Please use operating specyfic method to get more
details(\f[B]GetLastError\f[]() on windows and \f[B]errno\f[] everywhere
else)
.SH SEE ALSO
.PP
\f[B]errno\f[](3), \f[B]pmem2_map\f[](3), \f[B]libpmem2\f[](7) and
\f[B]<http://pmem.io>\f[]
